name: Sensecraft CI

on:
  push:
    branches:
      - dev
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.20.2
        uses: actions/setup-node@v3
        with:
          node-version: 16.20.2
      - name: use postgres
        uses: Daniel-Marynicz/postgresql-action@master
        with:
          postgres_image_tag: 15.4-alpine-jwt
          postgres_image_name: conversence/postgres
      - name: Install client components
        run: |
          sudo apt update
          sudo apt install -y postgresql-client wget chromium-driver golang-go
          go install github.com/mailhog/MailHog@latest
          echo "${HOME}/go/bin" >> $GITHUB_PATH
      - name: Initialize test DB
        working-directory: ./qs-server
        run: python ./scripts/initial_setup.py -u postgres -p postgres --no-create-development --no-create-production
      - name: install postgrest
        run: |
          wget https://github.com/PostgREST/postgrest/releases/download/v11.2.0/postgrest-v11.2.0-linux-static-x64.tar.xz
          tar -Jxf postgrest-v11.2.0-linux-static-x64.tar.xz
          rm postgrest-v11.2.0-linux-static-x64.tar.xz
          sudo mv postgrest /usr/bin/
      - name: Install server dependencies
        working-directory: ./qs-server
        run: npm ci
      - name: Build dispatcher
        working-directory: ./qs-server
        run: npm run build
      - name: Run server tests
        working-directory: ./qs-server
        run: npm run test
      - name: Install client dependencies
        working-directory: ./qs-client
        run: npm ci
      - name: Run client unit tests
        working-directory: ./qs-client
        run: npm run test:unit
      - name: Run scoring tests
        working-directory: ./qs-client
        run: npm run test:scoring
      - name: Run integration tests
        working-directory: ./qs-client
        run: npm run test:integration
      - name: cleanup postgres container
        run: |
          docker ps
          export PGCONT=`docker ps -q --filter ancestor=conversence/postgres:15.4-alpine-jwt`
          docker container stop $PGCONT
          docker container rm $PGCONT
